import subprocess

# List of target domains
domains = ["rapyd.net"]

# Output file path
output_file = "subdomains.txt"

# Set to store unique subdomains
unique_subdomains = set()

# Run subfinder to identify subdomains
subfinder_command = f"subfinder -d {' '.join(domains)} -o {output_file}"
subfinder_output = subprocess.run(subfinder_command, shell=True, capture_output=True, text=True)

# Check if subfinder executed successfully
if subfinder_output.returncode == 0:
    # Read the output file generated by subfinder
    with open(output_file, "r") as file:
        subdomains = file.read().splitlines()

    # Check each subdomain for potential takeover
    for subdomain in subdomains:
        # Perform DNS resolution for the subdomain
        dns_lookup_command = f"nslookup {subdomain}"
        dns_lookup_output = subprocess.run(dns_lookup_command, shell=True, capture_output=True, text=True)

        # Check if the subdomain is vulnerable to takeover
        if "server can't find" in dns_lookup_output.stdout:
            unique_subdomains.add(subdomain)

    # Print the vulnerable subdomains
    print("Vulnerable Subdomains:")
    for subdomain in unique_subdomains:
        print(subdomain)
else:
    # Error executing subfinder
    print("Error executing subfinder.")
